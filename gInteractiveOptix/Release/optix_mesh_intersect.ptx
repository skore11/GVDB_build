//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19805474
// Cuda compilation tools, release 7.5, V7.5.16
// Based on LLVM 3.4svn
//

.version 4.3
.target sm_30
.address_size 32

	// .globl	_Z14mesh_intersecti
.global .align 1 .b8 vertex_buffer[1];
.global .align 1 .b8 normal_buffer[1];
.global .align 1 .b8 texcoord_buffer[1];
.global .align 1 .b8 vindex_buffer[1];
.global .align 1 .b8 nindex_buffer[1];
.global .align 1 .b8 tindex_buffer[1];
.global .align 1 .b8 mindex_buffer[1];
.global .align 8 .b8 back_hit_point[12];
.global .align 8 .b8 front_hit_point[12];
.global .align 8 .b8 texcoord[12];
.global .align 8 .b8 geometric_normal[12];
.global .align 8 .b8 shading_normal[12];
.global .align 16 .b8 deep_color[16];
.global .align 4 .b8 ray[36];
.global .align 4 .u32 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo14back_hit_pointE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15front_hit_pointE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8texcoordE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10deep_colorE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14back_hit_pointE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15front_hit_pointE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8texcoordE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10deep_colorE[7] = {102, 108, 111, 97, 116, 52, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum14back_hit_pointE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15front_hit_pointE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8texcoordE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16geometric_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10deep_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic14back_hit_pointE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 98, 97, 99, 107, 95, 104, 105, 116, 95, 112, 111, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic15front_hit_pointE[26] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 102, 114, 111, 110, 116, 95, 104, 105, 116, 95, 112, 111, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic8texcoordE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 99, 111, 111, 114, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10deep_colorE[21] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 100, 101, 101, 112, 95, 99, 111, 108, 111, 114, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation14back_hit_pointE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15front_hit_pointE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8texcoordE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10deep_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];

.visible .entry _Z14mesh_intersecti(
	.param .u32 _Z14mesh_intersecti_param_0
)
{
	.reg .pred 	%p<38>;
	.reg .f32 	%f<229>;
	.reg .b32 	%r<197>;


	ld.param.u32 	%r17, [_Z14mesh_intersecti_param_0];
	mov.u32 	%r50, vindex_buffer;
	cvta.global.u32 	%r19, %r50;
	mov.u32 	%r44, 1;
	mov.u32 	%r45, 12;
	mov.u32 	%r49, 0;
	// inline asm
	call (%r18), _rt_buffer_get, (%r19, %r44, %r45, %r17, %r49, %r49, %r49);
	// inline asm
	ld.u32 	%r46, [%r18+8];
	ld.u32 	%r38, [%r18+4];
	ld.u32 	%r30, [%r18];
	mov.u32 	%r51, vertex_buffer;
	cvta.global.u32 	%r27, %r51;
	// inline asm
	call (%r26), _rt_buffer_get, (%r27, %r44, %r45, %r30, %r49, %r49, %r49);
	// inline asm
	ld.f32 	%f3, [%r26+8];
	ld.f32 	%f2, [%r26+4];
	ld.f32 	%f1, [%r26];
	// inline asm
	call (%r34), _rt_buffer_get, (%r27, %r44, %r45, %r38, %r49, %r49, %r49);
	// inline asm
	ld.f32 	%f59, [%r34+8];
	ld.f32 	%f60, [%r34+4];
	ld.f32 	%f61, [%r34];
	// inline asm
	call (%r42), _rt_buffer_get, (%r27, %r44, %r45, %r46, %r49, %r49, %r49);
	// inline asm
	sub.ftz.f32 	%f62, %f61, %f1;
	sub.ftz.f32 	%f63, %f60, %f2;
	sub.ftz.f32 	%f64, %f59, %f3;
	ld.f32 	%f65, [%r42+8];
	ld.f32 	%f66, [%r42+4];
	ld.f32 	%f67, [%r42];
	sub.ftz.f32 	%f68, %f1, %f67;
	sub.ftz.f32 	%f69, %f2, %f66;
	sub.ftz.f32 	%f70, %f3, %f65;
	mul.ftz.f32 	%f71, %f64, %f69;
	mul.ftz.f32 	%f72, %f63, %f70;
	sub.ftz.f32 	%f4, %f71, %f72;
	mul.ftz.f32 	%f73, %f62, %f70;
	mul.ftz.f32 	%f74, %f64, %f68;
	sub.ftz.f32 	%f5, %f73, %f74;
	mul.ftz.f32 	%f75, %f63, %f68;
	mul.ftz.f32 	%f76, %f62, %f69;
	sub.ftz.f32 	%f6, %f75, %f76;
	ld.global.f32 	%f77, [ray+12];
	ld.global.f32 	%f78, [ray+16];
	mul.ftz.f32 	%f79, %f78, %f5;
	fma.rn.ftz.f32 	%f80, %f77, %f4, %f79;
	ld.global.f32 	%f81, [ray+20];
	fma.rn.ftz.f32 	%f82, %f81, %f6, %f80;
	rcp.approx.ftz.f32 	%f83, %f82;
	ld.global.f32 	%f84, [ray];
	sub.ftz.f32 	%f85, %f1, %f84;
	ld.global.f32 	%f86, [ray+4];
	sub.ftz.f32 	%f87, %f2, %f86;
	ld.global.f32 	%f88, [ray+8];
	sub.ftz.f32 	%f89, %f3, %f88;
	mul.ftz.f32 	%f90, %f83, %f85;
	mul.ftz.f32 	%f91, %f83, %f87;
	mul.ftz.f32 	%f92, %f83, %f89;
	mul.ftz.f32 	%f93, %f78, %f92;
	mul.ftz.f32 	%f94, %f91, %f81;
	sub.ftz.f32 	%f95, %f93, %f94;
	mul.ftz.f32 	%f96, %f90, %f81;
	mul.ftz.f32 	%f97, %f92, %f77;
	sub.ftz.f32 	%f98, %f96, %f97;
	mul.ftz.f32 	%f99, %f91, %f77;
	mul.ftz.f32 	%f100, %f90, %f78;
	sub.ftz.f32 	%f101, %f99, %f100;
	mul.ftz.f32 	%f102, %f69, %f98;
	fma.rn.ftz.f32 	%f103, %f68, %f95, %f102;
	fma.rn.ftz.f32 	%f7, %f70, %f101, %f103;
	mul.ftz.f32 	%f104, %f63, %f98;
	fma.rn.ftz.f32 	%f105, %f62, %f95, %f104;
	fma.rn.ftz.f32 	%f8, %f64, %f101, %f105;
	mul.ftz.f32 	%f106, %f5, %f91;
	fma.rn.ftz.f32 	%f107, %f4, %f90, %f106;
	fma.rn.ftz.f32 	%f9, %f6, %f92, %f107;
	ld.global.f32 	%f108, [ray+32];
	setp.lt.ftz.f32	%p1, %f9, %f108;
	ld.global.f32 	%f109, [ray+28];
	setp.gt.ftz.f32	%p2, %f9, %f109;
	and.pred  	%p3, %p1, %p2;
	setp.ge.ftz.f32	%p4, %f7, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	setp.ge.ftz.f32	%p6, %f8, 0f00000000;
	and.pred  	%p7, %p5, %p6;
	add.ftz.f32 	%f110, %f7, %f8;
	setp.le.ftz.f32	%p8, %f110, 0f3F800000;
	and.pred  	%p9, %p7, %p8;
	@!%p9 bra 	BB0_45;
	bra.uni 	BB0_1;

BB0_1:
	// inline asm
	call (%r52), _rt_potential_intersection, (%f9);
	// inline asm
	setp.eq.s32	%p10, %r52, 0;
	@%p10 bra 	BB0_45;

	mul.ftz.f32 	%f112, %f5, %f5;
	fma.rn.ftz.f32 	%f113, %f4, %f4, %f112;
	fma.rn.ftz.f32 	%f114, %f6, %f6, %f113;
	sqrt.approx.ftz.f32 	%f115, %f114;
	rcp.approx.ftz.f32 	%f116, %f115;
	mul.ftz.f32 	%f10, %f4, %f116;
	mul.ftz.f32 	%f11, %f5, %f116;
	mul.ftz.f32 	%f12, %f6, %f116;
	mov.u32 	%r68, nindex_buffer;
	cvta.global.u32 	%r54, %r68;
	// inline asm
	call (%r53), _rt_buffer_get, (%r54, %r44, %r45, %r17, %r49, %r49, %r49);
	// inline asm
	ld.u32 	%r3, [%r53+8];
	ld.u32 	%r2, [%r53+4];
	ld.u32 	%r1, [%r53];
	st.global.v2.f32 	[shading_normal], {%f10, %f11};
	st.global.f32 	[shading_normal+8], %f12;
	mov.u32 	%r69, normal_buffer;
	cvta.global.u32 	%r65, %r69;
	// inline asm
	call (%r61, %r62, %r63, %r64), _rt_buffer_get_size, (%r65, %r44, %r45);
	// inline asm
	setp.eq.s32	%p11, %r61, 0;
	setp.lt.s32	%p12, %r1, 0;
	or.pred  	%p13, %p11, %p12;
	setp.lt.s32	%p14, %r2, 0;
	or.pred  	%p15, %p13, %p14;
	setp.lt.s32	%p16, %r3, 0;
	or.pred  	%p17, %p15, %p16;
	mov.f32 	%f217, %f10;
	mov.f32 	%f218, %f11;
	mov.f32 	%f219, %f12;
	@%p17 bra 	BB0_4;

	// inline asm
	call (%r70), _rt_buffer_get, (%r65, %r44, %r45, %r1, %r49, %r49, %r49);
	// inline asm
	ld.f32 	%f117, [%r70+8];
	ld.f32 	%f118, [%r70+4];
	ld.f32 	%f119, [%r70];
	// inline asm
	call (%r78), _rt_buffer_get, (%r65, %r44, %r45, %r2, %r49, %r49, %r49);
	// inline asm
	ld.f32 	%f120, [%r78+8];
	ld.f32 	%f121, [%r78+4];
	ld.f32 	%f122, [%r78];
	// inline asm
	call (%r86), _rt_buffer_get, (%r65, %r44, %r45, %r3, %r49, %r49, %r49);
	// inline asm
	ld.f32 	%f123, [%r86+8];
	ld.f32 	%f124, [%r86+4];
	ld.f32 	%f125, [%r86];
	mul.ftz.f32 	%f126, %f8, %f125;
	mul.ftz.f32 	%f127, %f8, %f124;
	mul.ftz.f32 	%f128, %f8, %f123;
	fma.rn.ftz.f32 	%f129, %f7, %f122, %f126;
	fma.rn.ftz.f32 	%f130, %f7, %f121, %f127;
	fma.rn.ftz.f32 	%f131, %f7, %f120, %f128;
	mov.f32 	%f132, 0f3F800000;
	sub.ftz.f32 	%f133, %f132, %f7;
	sub.ftz.f32 	%f134, %f133, %f8;
	fma.rn.ftz.f32 	%f135, %f134, %f119, %f129;
	fma.rn.ftz.f32 	%f136, %f134, %f118, %f130;
	fma.rn.ftz.f32 	%f137, %f134, %f117, %f131;
	mul.ftz.f32 	%f138, %f136, %f136;
	fma.rn.ftz.f32 	%f139, %f135, %f135, %f138;
	fma.rn.ftz.f32 	%f140, %f137, %f137, %f139;
	sqrt.approx.ftz.f32 	%f141, %f140;
	rcp.approx.ftz.f32 	%f142, %f141;
	mul.ftz.f32 	%f13, %f142, %f135;
	mul.ftz.f32 	%f14, %f142, %f136;
	mul.ftz.f32 	%f15, %f142, %f137;
	mov.f32 	%f217, %f13;
	mov.f32 	%f218, %f14;
	mov.f32 	%f219, %f15;

BB0_4:
	mov.f32 	%f18, %f219;
	mov.f32 	%f17, %f218;
	mov.f32 	%f16, %f217;
	st.global.v2.f32 	[shading_normal], {%f16, %f17};
	st.global.f32 	[shading_normal+8], %f18;
	st.global.v2.f32 	[geometric_normal], {%f10, %f11};
	st.global.f32 	[geometric_normal+8], %f12;
	mov.u32 	%r110, tindex_buffer;
	cvta.global.u32 	%r96, %r110;
	// inline asm
	call (%r95), _rt_buffer_get, (%r96, %r44, %r45, %r17, %r49, %r49, %r49);
	// inline asm
	ld.u32 	%r6, [%r95+8];
	ld.u32 	%r5, [%r95+4];
	ld.u32 	%r4, [%r95];
	mov.u32 	%r111, texcoord_buffer;
	cvta.global.u32 	%r107, %r111;
	mov.u32 	%r109, 8;
	// inline asm
	call (%r103, %r104, %r105, %r106), _rt_buffer_get_size, (%r107, %r44, %r109);
	// inline asm
	setp.eq.s32	%p18, %r103, 0;
	setp.lt.s32	%p19, %r4, 0;
	or.pred  	%p20, %p18, %p19;
	setp.lt.s32	%p21, %r5, 0;
	or.pred  	%p22, %p20, %p21;
	setp.lt.s32	%p23, %r6, 0;
	or.pred  	%p24, %p22, %p23;
	@%p24 bra 	BB0_6;
	bra.uni 	BB0_5;

BB0_6:
	st.global.u32 	[texcoord+8], %r49;
	mov.f32 	%f164, 0f00000000;
	st.global.v2.f32 	[texcoord], {%f164, %f164};
	bra.uni 	BB0_7;

BB0_5:
	// inline asm
	call (%r112), _rt_buffer_get, (%r107, %r44, %r109, %r4, %r49, %r49, %r49);
	// inline asm
	ld.v2.f32 	{%f143, %f144}, [%r112];
	// inline asm
	call (%r120), _rt_buffer_get, (%r107, %r44, %r109, %r5, %r49, %r49, %r49);
	// inline asm
	ld.v2.f32 	{%f147, %f148}, [%r120];
	// inline asm
	call (%r128), _rt_buffer_get, (%r107, %r44, %r109, %r6, %r49, %r49, %r49);
	// inline asm
	ld.v2.f32 	{%f151, %f152}, [%r128];
	mul.ftz.f32 	%f155, %f8, %f151;
	mul.ftz.f32 	%f156, %f8, %f152;
	fma.rn.ftz.f32 	%f157, %f7, %f147, %f155;
	fma.rn.ftz.f32 	%f158, %f7, %f148, %f156;
	mov.f32 	%f159, 0f3F800000;
	sub.ftz.f32 	%f160, %f159, %f7;
	sub.ftz.f32 	%f161, %f160, %f8;
	fma.rn.ftz.f32 	%f162, %f161, %f144, %f158;
	fma.rn.ftz.f32 	%f163, %f161, %f143, %f157;
	st.global.v2.f32 	[texcoord], {%f163, %f162};
	st.global.u32 	[texcoord+8], %r49;

BB0_7:
	ld.global.f32 	%f165, [ray+12];
	ld.global.f32 	%f166, [ray+16];
	ld.global.f32 	%f167, [ray+20];
	ld.global.f32 	%f168, [ray];
	fma.rn.ftz.f32 	%f169, %f9, %f165, %f168;
	ld.global.f32 	%f170, [ray+4];
	fma.rn.ftz.f32 	%f171, %f9, %f166, %f170;
	ld.global.f32 	%f172, [ray+8];
	fma.rn.ftz.f32 	%f173, %f9, %f167, %f172;
	sub.ftz.f32 	%f174, %f169, %f1;
	sub.ftz.f32 	%f175, %f171, %f2;
	sub.ftz.f32 	%f176, %f173, %f3;
	mul.ftz.f32 	%f177, %f11, %f175;
	fma.rn.ftz.f32 	%f178, %f10, %f174, %f177;
	fma.rn.ftz.f32 	%f179, %f12, %f176, %f178;
	neg.ftz.f32 	%f180, %f179;
	mul.ftz.f32 	%f181, %f11, %f166;
	fma.rn.ftz.f32 	%f182, %f10, %f165, %f181;
	fma.rn.ftz.f32 	%f183, %f12, %f167, %f182;
	div.approx.ftz.f32 	%f184, %f180, %f183;
	fma.rn.ftz.f32 	%f19, %f184, %f165, %f169;
	fma.rn.ftz.f32 	%f20, %f184, %f166, %f171;
	fma.rn.ftz.f32 	%f21, %f184, %f167, %f173;
	setp.gt.ftz.f32	%p25, %f183, 0f00000000;
	mov.b32 	 %r7, %f19;
	and.b32  	%r8, %r7, 2147483647;
	@%p25 bra 	BB0_26;
	bra.uni 	BB0_8;

BB0_26:
	setp.lt.u32	%p32, %r8, 953267991;
	@%p32 bra 	BB0_28;
	bra.uni 	BB0_27;

BB0_28:
	fma.rn.ftz.f32 	%f223, %f10, 0f38D1B717, %f19;
	bra.uni 	BB0_29;

BB0_8:
	setp.lt.u32	%p26, %r8, 953267991;
	@%p26 bra 	BB0_10;
	bra.uni 	BB0_9;

BB0_10:
	fma.rn.ftz.f32 	%f220, %f10, 0fB8D1B717, %f19;
	bra.uni 	BB0_11;

BB0_27:
	and.b32  	%r162, %r7, -2147483648;
	or.b32  	%r163, %r162, 1174405120;
	mov.b32 	 %f200, %r163;
	mul.ftz.f32 	%f201, %f10, %f200;
	cvt.rzi.ftz.s32.f32	%r164, %f201;
	add.s32 	%r165, %r164, %r7;
	mov.b32 	 %f223, %r165;

BB0_29:
	mov.b32 	 %r13, %f20;
	and.b32  	%r14, %r13, 2147483647;
	setp.lt.u32	%p33, %r14, 953267991;
	@%p33 bra 	BB0_31;
	bra.uni 	BB0_30;

BB0_31:
	fma.rn.ftz.f32 	%f224, %f11, 0f38D1B717, %f20;
	bra.uni 	BB0_32;

BB0_9:
	and.b32  	%r138, %r7, -2147483648;
	or.b32  	%r139, %r138, 1174405120;
	mov.b32 	 %f185, %r139;
	mul.ftz.f32 	%f186, %f10, %f185;
	neg.ftz.f32 	%f187, %f186;
	cvt.rzi.ftz.s32.f32	%r140, %f187;
	add.s32 	%r141, %r140, %r7;
	mov.b32 	 %f220, %r141;

BB0_11:
	mov.b32 	 %r9, %f20;
	and.b32  	%r10, %r9, 2147483647;
	setp.lt.u32	%p27, %r10, 953267991;
	@%p27 bra 	BB0_13;
	bra.uni 	BB0_12;

BB0_13:
	fma.rn.ftz.f32 	%f221, %f11, 0fB8D1B717, %f20;
	bra.uni 	BB0_14;

BB0_30:
	and.b32  	%r166, %r13, -2147483648;
	or.b32  	%r167, %r166, 1174405120;
	mov.b32 	 %f202, %r167;
	mul.ftz.f32 	%f203, %f11, %f202;
	cvt.rzi.ftz.s32.f32	%r168, %f203;
	add.s32 	%r169, %r168, %r13;
	mov.b32 	 %f224, %r169;

BB0_32:
	mov.b32 	 %r15, %f21;
	and.b32  	%r16, %r15, 2147483647;
	setp.lt.u32	%p34, %r16, 953267991;
	@%p34 bra 	BB0_34;
	bra.uni 	BB0_33;

BB0_34:
	fma.rn.ftz.f32 	%f225, %f12, 0f38D1B717, %f21;
	bra.uni 	BB0_35;

BB0_12:
	and.b32  	%r142, %r9, -2147483648;
	or.b32  	%r143, %r142, 1174405120;
	mov.b32 	 %f188, %r143;
	mul.ftz.f32 	%f189, %f11, %f188;
	neg.ftz.f32 	%f190, %f189;
	cvt.rzi.ftz.s32.f32	%r144, %f190;
	add.s32 	%r145, %r144, %r9;
	mov.b32 	 %f221, %r145;

BB0_14:
	mov.b32 	 %r11, %f21;
	and.b32  	%r12, %r11, 2147483647;
	setp.lt.u32	%p28, %r12, 953267991;
	@%p28 bra 	BB0_16;
	bra.uni 	BB0_15;

BB0_16:
	fma.rn.ftz.f32 	%f222, %f12, 0fB8D1B717, %f21;
	bra.uni 	BB0_17;

BB0_33:
	and.b32  	%r170, %r15, -2147483648;
	or.b32  	%r171, %r170, 1174405120;
	mov.b32 	 %f204, %r171;
	mul.ftz.f32 	%f205, %f12, %f204;
	cvt.rzi.ftz.s32.f32	%r172, %f205;
	add.s32 	%r173, %r172, %r15;
	mov.b32 	 %f225, %r173;

BB0_35:
	st.global.v2.f32 	[back_hit_point], {%f223, %f224};
	st.global.f32 	[back_hit_point+8], %f225;
	@%p32 bra 	BB0_37;
	bra.uni 	BB0_36;

BB0_37:
	fma.rn.ftz.f32 	%f226, %f10, 0fB8D1B717, %f19;
	bra.uni 	BB0_38;

BB0_15:
	and.b32  	%r146, %r11, -2147483648;
	or.b32  	%r147, %r146, 1174405120;
	mov.b32 	 %f191, %r147;
	mul.ftz.f32 	%f192, %f12, %f191;
	neg.ftz.f32 	%f193, %f192;
	cvt.rzi.ftz.s32.f32	%r148, %f193;
	add.s32 	%r149, %r148, %r11;
	mov.b32 	 %f222, %r149;

BB0_17:
	st.global.v2.f32 	[back_hit_point], {%f220, %f221};
	st.global.f32 	[back_hit_point+8], %f222;
	@%p26 bra 	BB0_19;
	bra.uni 	BB0_18;

BB0_19:
	fma.rn.ftz.f32 	%f226, %f10, 0f38D1B717, %f19;
	bra.uni 	BB0_20;

BB0_36:
	and.b32  	%r174, %r7, -2147483648;
	or.b32  	%r175, %r174, 1174405120;
	mov.b32 	 %f206, %r175;
	mul.ftz.f32 	%f207, %f10, %f206;
	neg.ftz.f32 	%f208, %f207;
	cvt.rzi.ftz.s32.f32	%r176, %f208;
	add.s32 	%r177, %r176, %r7;
	mov.b32 	 %f226, %r177;

BB0_38:
	@%p33 bra 	BB0_40;
	bra.uni 	BB0_39;

BB0_40:
	fma.rn.ftz.f32 	%f227, %f11, 0fB8D1B717, %f20;
	bra.uni 	BB0_41;

BB0_18:
	and.b32  	%r150, %r7, -2147483648;
	or.b32  	%r151, %r150, 1174405120;
	mov.b32 	 %f194, %r151;
	mul.ftz.f32 	%f195, %f10, %f194;
	cvt.rzi.ftz.s32.f32	%r152, %f195;
	add.s32 	%r153, %r152, %r7;
	mov.b32 	 %f226, %r153;

BB0_20:
	@%p27 bra 	BB0_22;
	bra.uni 	BB0_21;

BB0_22:
	fma.rn.ftz.f32 	%f227, %f11, 0f38D1B717, %f20;
	bra.uni 	BB0_23;

BB0_39:
	and.b32  	%r178, %r13, -2147483648;
	or.b32  	%r179, %r178, 1174405120;
	mov.b32 	 %f209, %r179;
	mul.ftz.f32 	%f210, %f11, %f209;
	neg.ftz.f32 	%f211, %f210;
	cvt.rzi.ftz.s32.f32	%r180, %f211;
	add.s32 	%r181, %r180, %r13;
	mov.b32 	 %f227, %r181;

BB0_41:
	@%p34 bra 	BB0_43;
	bra.uni 	BB0_42;

BB0_43:
	fma.rn.ftz.f32 	%f228, %f12, 0fB8D1B717, %f21;
	bra.uni 	BB0_44;

BB0_21:
	and.b32  	%r154, %r9, -2147483648;
	or.b32  	%r155, %r154, 1174405120;
	mov.b32 	 %f196, %r155;
	mul.ftz.f32 	%f197, %f11, %f196;
	cvt.rzi.ftz.s32.f32	%r156, %f197;
	add.s32 	%r157, %r156, %r9;
	mov.b32 	 %f227, %r157;

BB0_23:
	@%p28 bra 	BB0_25;
	bra.uni 	BB0_24;

BB0_25:
	fma.rn.ftz.f32 	%f228, %f12, 0f38D1B717, %f21;
	bra.uni 	BB0_44;

BB0_42:
	and.b32  	%r182, %r15, -2147483648;
	or.b32  	%r183, %r182, 1174405120;
	mov.b32 	 %f212, %r183;
	mul.ftz.f32 	%f213, %f12, %f212;
	neg.ftz.f32 	%f214, %f213;
	cvt.rzi.ftz.s32.f32	%r184, %f214;
	add.s32 	%r185, %r184, %r15;
	mov.b32 	 %f228, %r185;
	bra.uni 	BB0_44;

BB0_24:
	and.b32  	%r158, %r11, -2147483648;
	or.b32  	%r159, %r158, 1174405120;
	mov.b32 	 %f198, %r159;
	mul.ftz.f32 	%f199, %f12, %f198;
	cvt.rzi.ftz.s32.f32	%r160, %f199;
	add.s32 	%r161, %r160, %r11;
	mov.b32 	 %f228, %r161;

BB0_44:
	st.global.v2.f32 	[front_hit_point], {%f226, %f227};
	st.global.f32 	[front_hit_point+8], %f228;
	mov.f32 	%f215, 0f3F800000;
	mov.f32 	%f216, 0f00000000;
	st.global.v4.f32 	[deep_color], {%f216, %f216, %f216, %f215};
	mov.u32 	%r196, mindex_buffer;
	cvta.global.u32 	%r187, %r196;
	mov.u32 	%r189, 4;
	// inline asm
	call (%r186), _rt_buffer_get, (%r187, %r44, %r189, %r17, %r49, %r49, %r49);
	// inline asm
	ld.u32 	%r195, [%r186];
	// inline asm
	call (%r194), _rt_report_intersection, (%r195);
	// inline asm

BB0_45:
	ret;
}

	// .globl	_Z11mesh_boundsiPf
.visible .entry _Z11mesh_boundsiPf(
	.param .u32 _Z11mesh_boundsiPf_param_0,
	.param .u32 _Z11mesh_boundsiPf_param_1
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<42>;
	.reg .b32 	%r<40>;


	ld.param.u32 	%r8, [_Z11mesh_boundsiPf_param_0];
	ld.param.u32 	%r3, [_Z11mesh_boundsiPf_param_1];
	mov.u32 	%r36, vindex_buffer;
	cvta.global.u32 	%r5, %r36;
	mov.u32 	%r30, 1;
	mov.u32 	%r31, 12;
	mov.u32 	%r35, 0;
	// inline asm
	call (%r4), _rt_buffer_get, (%r5, %r30, %r31, %r8, %r35, %r35, %r35);
	// inline asm
	ld.u32 	%r32, [%r4+8];
	ld.u32 	%r24, [%r4+4];
	ld.u32 	%r16, [%r4];
	mov.u32 	%r37, vertex_buffer;
	cvta.global.u32 	%r13, %r37;
	// inline asm
	call (%r12), _rt_buffer_get, (%r13, %r30, %r31, %r16, %r35, %r35, %r35);
	// inline asm
	ld.f32 	%f3, [%r12+8];
	ld.f32 	%f2, [%r12+4];
	ld.f32 	%f1, [%r12];
	// inline asm
	call (%r20), _rt_buffer_get, (%r13, %r30, %r31, %r24, %r35, %r35, %r35);
	// inline asm
	ld.f32 	%f6, [%r20+8];
	ld.f32 	%f5, [%r20+4];
	ld.f32 	%f4, [%r20];
	// inline asm
	call (%r28), _rt_buffer_get, (%r13, %r30, %r31, %r32, %r35, %r35, %r35);
	// inline asm
	sub.ftz.f32 	%f11, %f4, %f1;
	sub.ftz.f32 	%f12, %f5, %f2;
	sub.ftz.f32 	%f13, %f6, %f3;
	ld.f32 	%f9, [%r28+8];
	ld.f32 	%f8, [%r28+4];
	ld.f32 	%f7, [%r28];
	sub.ftz.f32 	%f14, %f7, %f1;
	sub.ftz.f32 	%f15, %f8, %f2;
	sub.ftz.f32 	%f16, %f9, %f3;
	mul.ftz.f32 	%f17, %f12, %f16;
	mul.ftz.f32 	%f18, %f13, %f15;
	sub.ftz.f32 	%f19, %f17, %f18;
	mul.ftz.f32 	%f20, %f13, %f14;
	mul.ftz.f32 	%f21, %f11, %f16;
	sub.ftz.f32 	%f22, %f20, %f21;
	mul.ftz.f32 	%f23, %f11, %f15;
	mul.ftz.f32 	%f24, %f12, %f14;
	sub.ftz.f32 	%f25, %f23, %f24;
	mul.ftz.f32 	%f26, %f22, %f22;
	fma.rn.ftz.f32 	%f27, %f19, %f19, %f26;
	fma.rn.ftz.f32 	%f28, %f25, %f25, %f27;
	sqrt.approx.ftz.f32 	%f10, %f28;
	mov.pred 	%p5, 0;
	setp.leu.ftz.f32	%p4, %f10, 0f00000000;
	@%p4 bra 	BB1_2;

	abs.ftz.f32 	%f29, %f10;
	setp.neu.ftz.f32	%p5, %f29, 0f7F800000;

BB1_2:
	cvta.to.global.u32 	%r2, %r3;
	@%p5 bra 	BB1_4;
	bra.uni 	BB1_3;

BB1_4:
	min.ftz.f32 	%f30, %f1, %f4;
	min.ftz.f32 	%f31, %f30, %f7;
	min.ftz.f32 	%f32, %f2, %f5;
	min.ftz.f32 	%f33, %f32, %f8;
	min.ftz.f32 	%f34, %f3, %f6;
	min.ftz.f32 	%f35, %f34, %f9;
	st.global.f32 	[%r2], %f31;
	st.global.f32 	[%r2+4], %f33;
	st.global.f32 	[%r2+8], %f35;
	max.ftz.f32 	%f36, %f1, %f4;
	max.ftz.f32 	%f37, %f36, %f7;
	max.ftz.f32 	%f38, %f2, %f5;
	max.ftz.f32 	%f39, %f38, %f8;
	max.ftz.f32 	%f40, %f3, %f6;
	max.ftz.f32 	%f41, %f40, %f9;
	st.global.f32 	[%r2+12], %f37;
	st.global.f32 	[%r2+16], %f39;
	st.global.f32 	[%r2+20], %f41;
	bra.uni 	BB1_5;

BB1_3:
	mov.u32 	%r38, 2096152002;
	st.global.u32 	[%r2+8], %r38;
	st.global.u32 	[%r2+4], %r38;
	st.global.u32 	[%r2], %r38;
	mov.u32 	%r39, -51331646;
	st.global.u32 	[%r2+20], %r39;
	st.global.u32 	[%r2+16], %r39;
	st.global.u32 	[%r2+12], %r39;

BB1_5:
	ret;
}


