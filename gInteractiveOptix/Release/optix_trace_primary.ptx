//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19805474
// Cuda compilation tools, release 7.5, V7.5.16
// Based on LLVM 3.4svn
//

.version 4.3
.target sm_30
.address_size 32

	// .globl	_Z13trace_primaryv
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b32 vprintf_param_0,
	.param .b32 vprintf_param_1
)
;
.global .align 8 .b8 cam_pos[12];
.global .align 4 .b8 cam_U[12];
.global .align 4 .b8 cam_V[12];
.global .align 4 .b8 cam_W[12];
.global .align 8 .b8 bad_color[12];
.global .align 4 .f32 scene_epsilon;
.global .align 4 .u32 sample;
.global .align 1 .b8 output_buffer[1];
.global .align 8 .b8 top_object[4];
.global .align 1 .b8 rnd_seeds[1];
.global .align 8 .b8 launch_index[8];
.global .align 8 .b8 launch_dim[8];
.global .align 4 .u32 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7cam_posE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5cam_UE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5cam_VE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5cam_WE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9bad_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13scene_epsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6sampleE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10launch_dimE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename7cam_posE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5cam_UE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5cam_VE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5cam_WE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9bad_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13scene_epsilonE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename6sampleE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10launch_dimE[6] = {117, 105, 110, 116, 50, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7cam_posE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5cam_UE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5cam_VE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5cam_WE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9bad_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13scene_epsilonE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6sampleE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10launch_dimE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic7cam_posE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5cam_UE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5cam_VE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5cam_WE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9bad_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13scene_epsilonE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic6sampleE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10launch_dimE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation7cam_posE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5cam_UE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5cam_VE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5cam_WE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9bad_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13scene_epsilonE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6sampleE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10launch_dimE[1];
.global .align 1 .b8 $str[40] = {69, 120, 99, 101, 112, 116, 105, 111, 110, 32, 48, 120, 37, 88, 32, 97, 116, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 40, 37, 100, 44, 37, 100, 41, 10, 0};

.visible .entry _Z13trace_primaryv(

)
{
	.local .align 8 .b8 	__local_depot0[40];
	.reg .b32 	%SP;
	.reg .b32 	%SPL;
	.reg .pred 	%p<2>;
	.reg .f32 	%f<118>;
	.reg .b32 	%r<108>;


	mov.u32 	%r107, __local_depot0;
	cvta.local.u32 	%SP, %r107;
	add.u32 	%r11, %SP, 0;
	cvta.to.local.u32 	%r12, %r11;
	ld.global.v2.u32 	{%r13, %r14}, [launch_index];
	cvt.rn.f32.u32	%f5, %r13;
	cvt.rn.f32.u32	%f6, %r14;
	ld.global.v2.u32 	{%r17, %r18}, [launch_dim];
	cvt.rn.f32.u32	%f7, %r17;
	cvt.rn.f32.u32	%f8, %r18;
	div.approx.ftz.f32 	%f9, %f5, %f7;
	div.approx.ftz.f32 	%f10, %f6, %f8;
	add.ftz.f32 	%f11, %f9, 0fBF000000;
	add.ftz.f32 	%f12, %f10, 0fBF000000;
	ld.global.f32 	%f13, [cam_U];
	ld.global.f32 	%f14, [cam_U+4];
	mul.ftz.f32 	%f15, %f14, %f14;
	fma.rn.ftz.f32 	%f16, %f13, %f13, %f15;
	ld.global.f32 	%f17, [cam_U+8];
	fma.rn.ftz.f32 	%f18, %f17, %f17, %f16;
	sqrt.approx.ftz.f32 	%f19, %f18;
	div.approx.ftz.f32 	%f1, %f19, %f7;
	mov.u32 	%r10, 0;
	st.local.u32 	[%r12+12], %r10;
	st.local.u32 	[%r12+20], %r10;
	st.local.u32 	[%r12+24], %r10;
	ld.global.u32 	%r21, [sample];
	setp.lt.u32	%p1, %r21, 2;
	ld.global.f32 	%f20, [cam_V];
	mul.ftz.f32 	%f21, %f12, %f20;
	ld.global.f32 	%f22, [cam_V+4];
	mul.ftz.f32 	%f23, %f12, %f22;
	ld.global.f32 	%f24, [cam_V+8];
	mul.ftz.f32 	%f25, %f12, %f24;
	fma.rn.ftz.f32 	%f26, %f11, %f13, %f21;
	fma.rn.ftz.f32 	%f27, %f11, %f14, %f23;
	fma.rn.ftz.f32 	%f28, %f11, %f17, %f25;
	ld.global.f32 	%f29, [cam_W];
	add.ftz.f32 	%f2, %f26, %f29;
	ld.global.f32 	%f30, [cam_W+4];
	add.ftz.f32 	%f3, %f27, %f30;
	ld.global.f32 	%f31, [cam_W+8];
	add.ftz.f32 	%f4, %f28, %f31;
	ld.global.v2.u32 	{%r22, %r23}, [launch_index];
	mov.u32 	%r24, rnd_seeds;
	cvta.global.u32 	%r4, %r24;
	mov.u32 	%r5, 2;
	mov.u32 	%r6, 4;
	// inline asm
	call (%r3), _rt_buffer_get, (%r4, %r5, %r6, %r22, %r23, %r10, %r10);
	// inline asm
	ld.u32 	%r2, [%r3];
	@%p1 bra 	BB0_2;
	bra.uni 	BB0_1;

BB0_2:
	add.u32 	%r74, %SP, 32;
	cvta.to.local.u32 	%r75, %r74;
	st.local.u32 	[%r75], %r2;
	ld.local.u32 	%r76, [%r75];
	mad.lo.s32 	%r77, %r76, 1664525, 1013904223;
	and.b32  	%r78, %r77, 16777215;
	cvt.rn.f32.u32	%f85, %r78;
	mov.f32 	%f86, 0f4B800000;
	div.approx.ftz.f32 	%f87, %f85, %f86;
	add.ftz.f32 	%f88, %f87, 0fBF000000;
	mad.lo.s32 	%r79, %r77, 1664525, 1013904223;
	and.b32  	%r80, %r79, 16777215;
	cvt.rn.f32.u32	%f89, %r80;
	div.approx.ftz.f32 	%f90, %f89, %f86;
	add.ftz.f32 	%f91, %f90, 0fBF000000;
	mad.lo.s32 	%r81, %r79, 1664525, 1013904223;
	and.b32  	%r82, %r81, 16777215;
	cvt.rn.f32.u32	%f92, %r82;
	div.approx.ftz.f32 	%f93, %f92, %f86;
	add.ftz.f32 	%f94, %f93, 0fBF000000;
	ld.global.v2.u32 	{%r83, %r84}, [launch_index];
	// inline asm
	call (%r62), _rt_buffer_get, (%r4, %r5, %r6, %r83, %r84, %r10, %r10);
	// inline asm
	st.u32 	[%r62], %r81;
	fma.rn.ftz.f32 	%f95, %f1, %f88, %f2;
	fma.rn.ftz.f32 	%f96, %f1, %f91, %f3;
	fma.rn.ftz.f32 	%f97, %f1, %f94, %f4;
	mul.ftz.f32 	%f98, %f96, %f96;
	fma.rn.ftz.f32 	%f99, %f95, %f95, %f98;
	fma.rn.ftz.f32 	%f100, %f97, %f97, %f99;
	sqrt.approx.ftz.f32 	%f101, %f100;
	rcp.approx.ftz.f32 	%f102, %f101;
	mul.ftz.f32 	%f80, %f95, %f102;
	mul.ftz.f32 	%f81, %f96, %f102;
	mul.ftz.f32 	%f82, %f97, %f102;
	ld.global.v2.f32 	{%f103, %f104}, [cam_pos];
	ld.global.f32 	%f79, [cam_pos+8];
	ld.global.u32 	%r70, [top_object];
	mov.f32 	%f83, 0f00000000;
	mov.f32 	%f84, 0f6C4ECB8F;
	mov.u32 	%r73, 28;
	// inline asm
	call _rt_trace, (%r70, %f103, %f104, %f79, %f80, %f81, %f82, %r10, %f83, %f84, %r11, %r73);
	// inline asm
	add.s32 	%r101, %r12, 12;
	ld.local.v2.f32 	{%f105, %f106}, [%r101+-12];
	add.s32 	%r102, %r12, 12;
	ld.local.f32 	%f109, [%r102+-4];
	add.ftz.f32 	%f110, %f109, 0f00000000;
	add.ftz.f32 	%f111, %f106, 0f00000000;
	add.ftz.f32 	%f112, %f105, 0f00000000;
	add.s32 	%r103, %r12, 12;
	st.local.v2.f32 	[%r103+-12], {%f112, %f111};
	add.s32 	%r104, %r12, 12;
	st.local.f32 	[%r104+-4], %f110;
	bra.uni 	BB0_3;

BB0_1:
	add.u32 	%r45, %SP, 28;
	cvta.to.local.u32 	%r46, %r45;
	st.local.u32 	[%r46], %r2;
	ld.local.u32 	%r47, [%r46];
	mad.lo.s32 	%r48, %r47, 1664525, 1013904223;
	and.b32  	%r49, %r48, 16777215;
	cvt.rn.f32.u32	%f40, %r49;
	mov.f32 	%f41, 0f4B800000;
	div.approx.ftz.f32 	%f42, %f40, %f41;
	add.ftz.f32 	%f43, %f42, 0fBF000000;
	mad.lo.s32 	%r50, %r48, 1664525, 1013904223;
	and.b32  	%r51, %r50, 16777215;
	cvt.rn.f32.u32	%f44, %r51;
	div.approx.ftz.f32 	%f45, %f44, %f41;
	add.ftz.f32 	%f46, %f45, 0fBF000000;
	mad.lo.s32 	%r52, %r50, 1664525, 1013904223;
	and.b32  	%r53, %r52, 16777215;
	cvt.rn.f32.u32	%f47, %r53;
	div.approx.ftz.f32 	%f48, %f47, %f41;
	add.ftz.f32 	%f49, %f48, 0fBF000000;
	ld.global.v2.u32 	{%r54, %r55}, [launch_index];
	// inline asm
	call (%r25), _rt_buffer_get, (%r4, %r5, %r6, %r54, %r55, %r10, %r10);
	// inline asm
	st.u32 	[%r25], %r52;
	fma.rn.ftz.f32 	%f50, %f1, %f43, %f2;
	fma.rn.ftz.f32 	%f51, %f1, %f46, %f3;
	fma.rn.ftz.f32 	%f52, %f1, %f49, %f4;
	mul.ftz.f32 	%f53, %f51, %f51;
	fma.rn.ftz.f32 	%f54, %f50, %f50, %f53;
	fma.rn.ftz.f32 	%f55, %f52, %f52, %f54;
	sqrt.approx.ftz.f32 	%f56, %f55;
	rcp.approx.ftz.f32 	%f57, %f56;
	mul.ftz.f32 	%f35, %f50, %f57;
	mul.ftz.f32 	%f36, %f51, %f57;
	mul.ftz.f32 	%f37, %f52, %f57;
	ld.global.v2.f32 	{%f58, %f59}, [cam_pos];
	ld.global.f32 	%f34, [cam_pos+8];
	ld.global.u32 	%r33, [top_object];
	mov.f32 	%f38, 0f00000000;
	mov.f32 	%f39, 0f6C4ECB8F;
	mov.u32 	%r36, 28;
	// inline asm
	call _rt_trace, (%r33, %f58, %f59, %f34, %f35, %f36, %f37, %r10, %f38, %f39, %r11, %r36);
	// inline asm
	ld.global.v2.u32 	{%r57, %r58}, [launch_index];
	mov.u32 	%r59, output_buffer;
	cvta.global.u32 	%r38, %r59;
	mov.u32 	%r40, 12;
	// inline asm
	call (%r37), _rt_buffer_get, (%r38, %r5, %r40, %r57, %r58, %r10, %r10);
	// inline asm
	ld.global.u32 	%r60, [sample];
	add.s32 	%r61, %r60, -1;
	cvt.rn.f32.u32	%f60, %r61;
	ld.f32 	%f61, [%r37];
	ld.f32 	%f62, [%r37+4];
	ld.f32 	%f63, [%r37+8];
	add.s32 	%r97, %r12, 12;
	ld.local.v2.f32 	{%f64, %f65}, [%r97+-12];
	fma.rn.ftz.f32 	%f67, %f61, %f60, %f64;
	fma.rn.ftz.f32 	%f69, %f62, %f60, %f65;
	add.s32 	%r98, %r12, 12;
	ld.local.f32 	%f70, [%r98+-4];
	fma.rn.ftz.f32 	%f71, %f60, %f63, %f70;
	cvt.rn.f32.u32	%f72, %r60;
	rcp.approx.ftz.f32 	%f73, %f72;
	mul.ftz.f32 	%f74, %f71, %f73;
	mul.ftz.f32 	%f75, %f69, %f73;
	mul.ftz.f32 	%f76, %f67, %f73;
	add.s32 	%r99, %r12, 12;
	st.local.v2.f32 	[%r99+-12], {%f76, %f75};
	add.s32 	%r100, %r12, 12;
	st.local.f32 	[%r100+-4], %f74;

BB0_3:
	ld.global.v2.u32 	{%r94, %r95}, [launch_index];
	mov.u32 	%r96, output_buffer;
	cvta.global.u32 	%r87, %r96;
	mov.u32 	%r89, 12;
	// inline asm
	call (%r86), _rt_buffer_get, (%r87, %r5, %r89, %r94, %r95, %r10, %r10);
	// inline asm
	add.s32 	%r105, %r12, 12;
	ld.local.v2.f32 	{%f113, %f114}, [%r105+-12];
	add.s32 	%r106, %r12, 12;
	ld.local.f32 	%f117, [%r106+-4];
	st.f32 	[%r86+8], %f117;
	st.f32 	[%r86+4], %f114;
	st.f32 	[%r86], %f113;
	ret;
}

	// .globl	_Z9exceptionv
.visible .entry _Z9exceptionv(

)
{
	.local .align 8 .b8 	__local_depot1[16];
	.reg .b32 	%SP;
	.reg .b32 	%SPL;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<23>;


	mov.u32 	%r22, __local_depot1;
	cvta.local.u32 	%SP, %r22;
	// inline asm
	call (%r1), _rt_get_exception_code, ();
	// inline asm
	ld.global.v2.u32 	{%r10, %r11}, [launch_index];
	add.u32 	%r14, %SP, 0;
	cvta.to.local.u32 	%r15, %r14;
	st.local.u32 	[%r15], %r1;
	st.local.u32 	[%r15+4], %r10;
	st.local.u32 	[%r15+8], %r11;
	mov.u32 	%r16, $str;
	cvta.global.u32 	%r17, %r16;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r17;
	.param .b32 param1;
	st.param.b32	[param1+0], %r14;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r18, [retval0+0];
	
	//{
	}// Callseq End 0
	ld.global.v2.u32 	{%r19, %r20}, [launch_index];
	mov.u32 	%r21, output_buffer;
	cvta.global.u32 	%r3, %r21;
	mov.u32 	%r4, 2;
	mov.u32 	%r5, 12;
	mov.u32 	%r9, 0;
	// inline asm
	call (%r2), _rt_buffer_get, (%r3, %r4, %r5, %r19, %r20, %r9, %r9);
	// inline asm
	ld.global.v2.f32 	{%f1, %f2}, [bad_color];
	ld.global.f32 	%f5, [bad_color+8];
	st.f32 	[%r2+8], %f5;
	st.f32 	[%r2+4], %f2;
	st.f32 	[%r2], %f1;
	ret;
}


